version: '3'

services:
  mysql:
    image: mysql
    build:
      context: ./db/mysql
      dockerfile: Dockerfile
    restart: always

    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  # mysql-client:
  #   image: mysql:8.2
  #   networks:
  #     - app-network
  #   command: tail -F anything

  phpmyadmin:
    image: phpmyadmin
    build:
      context: ./db/phpmyadmin
      dockerfile: Dockerfile
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - app-network

  faster-whisper-server:
    extends:
      file: ./faster-whisper-server/compose.yaml
      service: faster-whisper-server-cuda
    environment:
      - ALLOW_ORIGINS=${FWS_ALLOW_ORIGINS}

  nextjs:
    image: nextjs
    build:
      context: ./nextjs
      dockerfile: Dockerfile.dev
    volumes:
      - ./nextjs:/app
      - /app/node_modules
      - nextjs-cache:/root/.cache
    ports:
      - 3000:3000
      - 5555:5555
    networks:
      - app-network
    # depends_on:
    #   mysql:
    #     condition: service_started

  proxy:
    image: proxy
    build:
      context: ./proxy/dev
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 9000:9000
      # - 5555:5555
      # - 443:443
    volumes:
      - ./proxy/dev/conf.d:/etc/nginx/conf.d
    # depends_on:
    #   - mysql
    #   - phpmyadmin
    #   - manager
    #   - nextjs
    networks:
      - app-network

  zookeeper:
    image: quay.io/debezium/zookeeper:2.7
    container_name: zookeeper
    ports:
      - 8080:8080
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"

  kafka:
    image: quay.io/debezium/kafka:2.7
    container_name: kafka
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      - BROKER_ID:1
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    depends_on:
      zookeeper:
        condition: service_started

  kafka-connector:
    image: quay.io/debezium/connect:2.7
    container_name: kafka-connector
    ports:
      - "8083:8083"
    environment:
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    links:
      - kafka
      - mysql
    depends_on:
      mysql:
        condition: service_started
      kafka:
        condition: service_started
    # command: tail -F anything


volumes:
  manager-data:
  mysql-data: # fastapi-cache:
  nextjs-cache:
  hugging_face_cache:


networks:
  app-network:
  cdc-network: # external: true
